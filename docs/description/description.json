[
    {
        "patternId": "Structures\/AddZero",
        "title": "Adding Zero",
        "description": "Adding 0 is useless, as 0 is the neutral element for addition",
        "timetofix": 5
    },
    {
        "patternId": "Arrays\/AmbiguousKeys",
        "title": "Ambiguous Array Index",
        "description": "Those indexes are defined with different types, in the same array",
        "timetofix": 20
    },
    {
        "patternId": "Arrays\/MultipleIdenticalKeys",
        "title": "Multiple Index Definition",
        "description": "Indexes that are defined multiple times in the same array",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/EmptyClass",
        "title": "Empty Classes",
        "description": "Classes that do no define anything at all",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/NonPpp",
        "title": "Forgotten Visibility",
        "description": "Some classes elements (property, method, constant) are missing their explicit visibility",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/NonStaticMethodsCalledStatic",
        "title": "Non Static Methods Called In A Static",
        "description": "Static methods have to be declared as such (using the static keyword)",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/OldStyleConstructor",
        "title": "Old Style Constructor",
        "description": "PHP classes used to have the method bearing the same name as the class acts as the constructor",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/StaticMethodsCalledFromObject",
        "title": "Static Methods Called From Object",
        "description": "Static methods may be called without instantiating an object",
        "timetofix": 20
    },
    {
        "patternId": "Constants\/ConstantStrangeNames",
        "title": "Constants With Strange Names",
        "description": "List of constants being defined with names that are incompatible with PHP standards",
        "timetofix": 60
    },
    {
        "patternId": "Extensions\/Extapc",
        "title": "ext\/apc",
        "description": "Extension Alternative PHP Cache",
        "timetofix": 60
    },
    {
        "patternId": "Extensions\/Extfdf",
        "title": "ext\/fdf",
        "description": "Extension ext\/fdf",
        "timetofix": 60
    },
    {
        "patternId": "Extensions\/Extmysql",
        "title": "ext\/mysql",
        "description": "Extension for MySQL (Original MySQL API)",
        "timetofix": 60
    },
    {
        "patternId": "Extensions\/Extsqlite",
        "title": "ext\/sqlite",
        "description": "Extension Sqlite 2",
        "timetofix": 60
    },
    {
        "patternId": "Functions\/EmptyFunction",
        "title": "Empty Function",
        "description": "Function or method whose body is empty",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/RedeclaredPhpFunction",
        "title": "Redeclared PHP Functions",
        "description": "Function that bear the same name as a PHP function, and that are declared",
        "timetofix": 60
    },
    {
        "patternId": "Interfaces\/EmptyInterface",
        "title": "Empty Interfaces",
        "description": "Empty interfaces are a code smell",
        "timetofix": 5
    },
    {
        "patternId": "Php\/CaseForPSS",
        "title": "Use Lower Case For Parent, Static And Self",
        "description": "Until PHP 5",
        "timetofix": 5
    },
    {
        "patternId": "Php\/Php54RemovedFunctions",
        "title": "Functions Removed In PHP 5.4",
        "description": "Those functions were removed in PHP 5",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/Break0",
        "title": "Break With 0",
        "description": "Cannot break 0, as this makes no sense",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/BreakNonInteger",
        "title": "Break With Non Integer",
        "description": "When using a break, the argument of the operator must be a positive non-null integer literal or be omitted",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/CalltimePassByReference",
        "title": "Calltime Pass By Reference",
        "description": "PHP doesn't allow when a value is turned into a reference at functioncall, since PHP 5",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ErrorReportingWithInteger",
        "title": "error_reporting() With Integers",
        "description": "Using named constants with error_reporting is strongly encouraged to ensure compatibility for future versions",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/EvalUsage",
        "title": "Eval() Usage",
        "description": "Using eval() is bad for performances (compilation time), for caches (it won't be compiled), and for security (if it includes external data)",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ExitUsage",
        "title": "Exit() Usage",
        "description": "Using exit or die() in the code makes the code untestable (it will break unit tests)",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ForWithFunctioncall",
        "title": "For Using Functioncall",
        "description": "It is recommended to avoid functioncall in the for() statement",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/ForgottenWhiteSpace",
        "title": "Forgotten Whitespace",
        "description": "White spaces have been left at either end of a file : before the PHP opening tag, or after the closing tag",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/Iffectation",
        "title": "Iffectations",
        "description": "Affectations that appears in a condition",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/MultiplyByOne",
        "title": "Multiply By One",
        "description": "Multiplying by 1 is useless",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/NotNot",
        "title": "Not Not",
        "description": "Double not makes a boolean, not a true",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/OnceUsage",
        "title": "include_once() Usage",
        "description": "include_once() and require_once() functions should be avoided for performances reasons",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/PhpinfoUsage",
        "title": "Phpinfo",
        "description": "phpinfo() is a great function to learn about the current configuration of the server",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/StrposCompare",
        "title": "Strpos()-like Comparison",
        "description": "strpos(), and several PHP native functions, returns a string position, starting at 0, or false, in case of failure",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ThrowsAndAssign",
        "title": "Throws An Assignement",
        "description": "It is possible to throw an exception, and, in the same time, assign this exception to a variable",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/VardumpUsage",
        "title": "var_dump()... Usage",
        "description": "var_dump(), print_r() or var_export() should not be left in any production code",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/toStringThrowsException",
        "title": "__toString() Throws Exception",
        "description": "Magical method __toString() can't throw exceptions",
        "timetofix": 20
    },
    {
        "patternId": "Variables\/VariableNonascii",
        "title": "Non Ascii Variables",
        "description": "PHP supports variables with certain characters",
        "timetofix": 60
    },
    {
        "patternId": "Variables\/VariableUsedOnce",
        "title": "Used Once Variables",
        "description": "This is the list of used once variables",
        "timetofix": 5
    },
    {
        "patternId": "Traits\/EmptyTrait",
        "title": "Empty Traits",
        "description": "List of all empty trait defined in the code",
        "timetofix": 5
    },
    {
        "patternId": "Namespaces\/UnusedUse",
        "title": "Unused Use",
        "description": "Unused use statements",
        "timetofix": 5
    },
    {
        "patternId": "Namespaces\/UseWithFullyQualifiedNS",
        "title": "Use With Fully Qualified Name",
        "description": "Use statement doesn't require a fully qualified name",
        "timetofix": 60
    },
    {
        "patternId": "Php\/RawPostDataUsage",
        "title": "$HTTP_RAW_POST_DATA",
        "description": "$HTTP_RAW_POST_DATA is deprecated, and should be replaced by php:\/\/input",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/UselessInstruction",
        "title": "Useless Instructions",
        "description": "Those instructions are useless, or contains useless parts",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/AbstractStatic",
        "title": "Abstract Static Methods",
        "description": "Methods cannot be both abstract and static",
        "timetofix": 20
    },
    {
        "patternId": "Constants\/InvalidName",
        "title": "Invalid Constant Name",
        "description": "According to PHP's manual, constant names, ' A valid constant name starts with a letter or underscore, followed by any number of letters, numbers, or underscores",
        "timetofix": 20
    },
    {
        "patternId": "Constants\/MultipleConstantDefinition",
        "title": "Multiple Constant Definition",
        "description": "Some constants are defined several times in your code",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/WrongOptionalParameter",
        "title": "Wrong Optional Parameter",
        "description": "Wrong placement of optional parameters",
        "timetofix": 20
    },
    {
        "patternId": "Php\/IsnullVsEqualNull",
        "title": "Use === null",
        "description": "It is faster to use === null instead of is_null()",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/ThisIsNotAnArray",
        "title": "$this Is Not An Array",
        "description": "`$this` variable represents the current object and it is not an array, unless the class (or its parents) has the ArrayAccess interface",
        "timetofix": 20
    },
    {
        "patternId": "Type\/OneVariableStrings",
        "title": "One Variable String",
        "description": "These strings only contains one variable or property or array",
        "timetofix": 5
    },
    {
        "patternId": "Php\/EchoTagUsage",
        "title": "<?= Usage",
        "description": "Usage of the <?= tag, that echo's directly the following content",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/StaticContainsThis",
        "title": "Static Methods Can't Contain $this",
        "description": "Static methods are also called 'class methods' : they may be called even if the class has no instantiated object",
        "timetofix": 20
    },
    {
        "patternId": "Php\/ClosureThisSupport",
        "title": "Closure May Use $this",
        "description": "When closure were introduced in PHP, they couldn't use the $this variable, making is cumbersome to access local properties when the closure was created within an object",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/WhileListEach",
        "title": "While(List() = Each())",
        "description": "This code structure is quite old : it should be replace by the more modern and efficient foreach",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/OneLineTwoInstructions",
        "title": "Several Instructions On The Same Line",
        "description": "Usually, instructions do not share their line : one instruction, one line",
        "timetofix": 5
    },
    {
        "patternId": "Functions\/OneLetterFunctions",
        "title": "One Letter Functions",
        "description": "One letter functions seems to be really short for a meaningful name",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/MultipleDefinedCase",
        "title": "Multiples Identical Case",
        "description": "Some cases are defined multiple times, but only one will be processed",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/SwitchWithoutDefault",
        "title": "Switch Without Default",
        "description": "Always use a default statement in switch()",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/FunctionPreSubscripting",
        "title": "Function Subscripting, Old Style",
        "description": "Since PHP 5",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/ThisIsForClasses",
        "title": "$this Belongs To Classes Or Traits",
        "description": "$this variable represents only the current object",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/NestedTernary",
        "title": "Nested Ternary",
        "description": "Ternary operators should not be nested too deep",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/SwitchWithMultipleDefault",
        "title": "Switch With Too Many Default",
        "description": "Switch statements should only hold one default, not more",
        "timetofix": 20
    },
    {
        "patternId": "Arrays\/NonConstantArray",
        "title": "Non-constant Index In Array",
        "description": "Undefined constants revert as strings in Arrays",
        "timetofix": 5
    },
    {
        "patternId": "Constants\/UndefinedConstants",
        "title": "Undefined Constants",
        "description": "Constants definition can't be located",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/InstantiatingAbstractClass",
        "title": "Instantiating Abstract Class",
        "description": "PHP cannot instantiate an abstract class",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/MutualExtension",
        "title": "Classes Mutually Extending Each Other",
        "description": "Those classes are extending each other, creating an extension loop",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/CitSameName",
        "title": "Class, Interface Or Trait With Identical Names",
        "description": "The following names are used at the same time for classes, interfaces or traits",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/EmptyTryCatch",
        "title": "Empty Try Catch",
        "description": "The code does try, then catch errors but do no act upon the error",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/UndefinedClasses",
        "title": "Undefined Classes",
        "description": "Those classes are used in the code, but there are no definition for them",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/WrongCase",
        "title": "Class Name Case Difference",
        "description": "The spotted classes are used with a different case than their definition",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/Htmlentitiescall",
        "title": "Htmlentities Calls",
        "description": "htmlentities() and htmlspecialchars() are used to prevent injecting special characters in HTML code",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/UndefinedConstants",
        "title": "Undefined Class Constants",
        "description": "Class constants that are used, but never defined",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/UnusedPrivateProperty",
        "title": "Unused Private Properties",
        "description": "List of all static properties that are not used",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/UnusedPrivateMethod",
        "title": "Unused Static Methods",
        "description": "List of all static methods that are not used",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/UnusedFunctions",
        "title": "Unused Functions",
        "description": "The functions below are unused",
        "timetofix": 20
    },
    {
        "patternId": "Variables\/VariableUsedOnceByContext",
        "title": "Used Once Variables (In Scope)",
        "description": "This is the list of used once variables, scope by scope",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/UndefinedFunctions",
        "title": "Undefined Functions",
        "description": "Some functions are called, but not defined in the code",
        "timetofix": 20
    },
    {
        "patternId": "Php\/Deprecated",
        "title": "Deprecated Functions",
        "description": "The following functions are deprecated",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/CryptWithoutSalt",
        "title": "crypt() Without Salt",
        "description": "PHP 5",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/McryptcreateivWithoutOption",
        "title": "mcrypt_create_iv() With Default Values",
        "description": "Avoid using mcrypt_create_iv() default values",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/DanglingArrayReferences",
        "title": "Dangling Array References",
        "description": "Always unset a referenced-variable used in a loop",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/QueriesInLoop",
        "title": "Queries In Loops",
        "description": "Avoid querying databases in a loop",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/OldStyleVar",
        "title": "Var Keyword",
        "description": "Var was used in PHP 4 to mark properties as public",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/AliasesUsage",
        "title": "Aliases Usage",
        "description": "PHP manual recommends to avoid function aliases",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/UsesDefaultArguments",
        "title": "Uses Default Values",
        "description": "Default values are provided to methods so as to make it convenient to use",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/WrongNumberOfArguments",
        "title": "Wrong Number Of Arguments",
        "description": "Those functioncalls are made with too many or too few arguments",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/HardcodedPasswords",
        "title": "Hardcoded Passwords",
        "description": "Hardcoded passwords in the code",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/UnresolvedClasses",
        "title": "Unresolved Classes",
        "description": "The following classes are instantiated in the code, but their definition couldn't be found",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/UselessConstructor",
        "title": "Useless Constructor",
        "description": "Class constructor that have empty bodies are useless",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/ImplementIsForInterface",
        "title": "Implement Is For Interface",
        "description": "With class heritage, implements should be used for interfaces, and extends with classes",
        "timetofix": 20
    },
    {
        "patternId": "Constants\/ConstRecommended",
        "title": "Use const",
        "description": "The const keyword may be used to define constant, just like the define() function",
        "timetofix": 60
    },
    {
        "patternId": "Namespaces\/UnresolvedUse",
        "title": "Unresolved Use",
        "description": "The following use instructions cannot be resolved to a class or a namespace",
        "timetofix": 60
    },
    {
        "patternId": "Constants\/UnusedConstants",
        "title": "Unused Constants",
        "description": "Those constants are defined in the code but never used",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/UndefinedParentMP",
        "title": "Undefined Parent",
        "description": "List of properties and methods that are accessed using 'parent' keyword but are not defined in the parent class",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/UndefinedStaticMP",
        "title": "Undefined static:: Or self::",
        "description": "List of all undefined static and self properties and methods",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/AccessPrivate",
        "title": "Accessing Private",
        "description": "List of calls to private properties\/methods that will compile but yield some fatal error upon execution",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/AccessProtected",
        "title": "Access Protected Structures",
        "description": "It is not allowed to access protected properties or methods from outside the class or its relatives",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/PssWithoutClass",
        "title": "Parent, Static Or Self Outside Class",
        "description": "Parent, static and self keywords must be used within a class or a trait",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ListOmissions",
        "title": "list() May Omit Variables",
        "description": "Simply omit any unused variable in a list() call",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/OrDie",
        "title": "Or Die",
        "description": "Classic old style failed error management",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UnreachableCode",
        "title": "Unreachable Code",
        "description": "Code may be unreachable, because other instructions prevent its reaching",
        "timetofix": 5
    },
    {
        "patternId": "Variables\/WrittenOnlyVariable",
        "title": "Written Only Variables",
        "description": "Those variables are being written, but never read",
        "timetofix": 60
    },
    {
        "patternId": "Functions\/MustReturn",
        "title": "Must Return Methods",
        "description": "The following methods are expected to return a value that will be used later",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/EmptyLines",
        "title": "Empty Instructions",
        "description": "Empty instructions are part of the code that have no instructions",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/UnusedMethods",
        "title": "Unused Methods",
        "description": "Those methods are never called as methods",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/PropertyVariableConfusion",
        "title": "Property Variable Confusion",
        "description": "Within a class, there is both a property and variables bearing the same name",
        "timetofix": 60
    },
    {
        "patternId": "Exceptions\/OverwriteException",
        "title": "Overwritten Exceptions",
        "description": "In catch blocks, it is good practice not to overwrite the incoming exception, as information about the exception will be lost",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ForeachNeedReferencedSource",
        "title": "Foreach Needs Reference Array",
        "description": "When using foreach with a reference as value, the source must be a referenced array, which is a variable (or array or property or static property)",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ForeachReferenceIsNotModified",
        "title": "Foreach Reference Is Not Modified",
        "description": "Foreach statement may loop using a reference, especially when the loop has to change values of the array it is looping on",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/NoChangeIncomingVariables",
        "title": "Don't Change Incomings",
        "description": "PHP hands over a lot of information using special variables like $_GET, $_POST, etc",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/ComparedComparison",
        "title": "Compared Comparison",
        "description": "Usually, comparison are sufficient, and it is rare to have to compare the result of comparison",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/UselessReturn",
        "title": "Useless Return",
        "description": "The spotted functions or methods have a return statement, but this statement is useless",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/UnusedClass",
        "title": "Unused Classes",
        "description": "The following classes are never explicitely used in the code",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/Unpreprocessed",
        "title": "Unpreprocessed Values",
        "description": "Preprocessing values is the preparation of values before PHP executes the code",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/UndefinedProperty",
        "title": "Undefined Properties",
        "description": "List of properties that are not explicitely defined in the class, its parents or traits",
        "timetofix": 20
    },
    {
        "patternId": "Php\/ShortOpenTagRequired",
        "title": "Short Open Tags",
        "description": "Usage of short open tags is discouraged",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/BooleanStrictComparison",
        "title": "Strict Comparison With Booleans",
        "description": "Strict comparisons prevent from mistaking an error with a false",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/LoneBlock",
        "title": "Lone Blocks",
        "description": "Any grouped code without a commanding structure is useless",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/ThisIsNotForStatic",
        "title": "$this Is Not For Static Methods",
        "description": "Static methods shouldn't use $this variable",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/GlobalUsage",
        "title": "Global Usage",
        "description": "List usage of globals variables, with global keywords or direct access to $GLOBALS",
        "timetofix": 60
    },
    {
        "patternId": "Php\/ReservedNames",
        "title": "PHP Keywords As Names",
        "description": "PHP has a set of reserved keywords",
        "timetofix": 20
    },
    {
        "patternId": "Php\/LogicalInLetters",
        "title": "Logical Should Use Symbolic Operators",
        "description": "Logical operators come in two flavors :  and \/ &&, || \/ or, ^ \/ xor",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/ShouldUseSelf",
        "title": "Could Use self",
        "description": "'self' keyword refers to the current class, or any of its parents",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/ImplicitGlobal",
        "title": "Implicit Global",
        "description": "Global variables, that are used in local scope with global keyword, but are not declared as global in the global scope",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/CatchShadowsVariable",
        "title": "Catch Overwrite Variable",
        "description": "The try\/catch structure uses some variables that also in use in this scope",
        "timetofix": 5
    },
    {
        "patternId": "Functions\/DeepDefinitions",
        "title": "Deep Definitions",
        "description": "Structures, such as functions, classes, interfaces, traits, etc",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/ConstantClass",
        "title": "Constant Class",
        "description": "A class or an interface only made up of constants",
        "timetofix": 60
    },
    {
        "patternId": "Files\/NotDefinitionsOnly",
        "title": "Not Definitions Only",
        "description": "Files should only include definitions (class, functions, traits, interfaces, constants), or global instructions, but not both",
        "timetofix": 60
    },
    {
        "patternId": "Arrays\/ShouldPreprocess",
        "title": "Preprocess Arrays",
        "description": "Using long list of assignations for initializing arrays is significantly slower than the declaring them as an array",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/RepeatedPrint",
        "title": "Repeated print()",
        "description": "Always merge several print or echo in one call",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/PrintWithoutParenthesis",
        "title": "Avoid Parenthesis",
        "description": "Avoid Parenthesis for language construct",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ObjectReferences",
        "title": "Objects Don't Need References",
        "description": "There is no need to create references for objects, as those are always passed by reference when used as arguments",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/LocallyUnusedProperty",
        "title": "Locally Unused Property",
        "description": "Those properties are defined in a class, and this class doesn't have any method that makes use of them",
        "timetofix": 60
    },
    {
        "patternId": "Variables\/LostReferences",
        "title": "Lost References",
        "description": "Either avoid references, or propagate them correctly",
        "timetofix": 20
    },
    {
        "patternId": "Constants\/CreatedOutsideItsNamespace",
        "title": "Constants Created Outside Its Namespace",
        "description": "Constants Created Outside Its Namespace",
        "timetofix": 60
    },
    {
        "patternId": "Namespaces\/ConstantFullyQualified",
        "title": "Fully Qualified Constants",
        "description": "Constants defined with their namespace",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/PropertyNeverUsed",
        "title": "Never Used Properties",
        "description": "Properties that are never used",
        "timetofix": 60
    },
    {
        "patternId": "Type\/NoRealComparison",
        "title": "No Real Comparison",
        "description": "Avoid comparing decimal numbers with ==, ===, !==, !=",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/SequenceInFor",
        "title": "Sequences In For",
        "description": "For() instructions allows several instructions in each of its parameters",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/ShouldUseThis",
        "title": "Should Use Local Class",
        "description": "Methods in a class should use the class, or be functions",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/DirectCallToMagicMethod",
        "title": "No Direct Call To Magic Method",
        "description": "PHP magic methods, such as __get(), __set(), ",
        "timetofix": 20
    },
    {
        "patternId": "Type\/StringHoldAVariable",
        "title": "String May Hold A Variable",
        "description": "Those strings looks like holding a variable",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/EchoWithConcat",
        "title": "Echo With Concat",
        "description": "Optimize your echo's by not concatenating at echo() time, but serving all argument separated",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UnusedGlobal",
        "title": "Unused Global",
        "description": "List of global keyword, used in various functions but not actually used in the code",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UselessGlobal",
        "title": "Useless Global",
        "description": "Global are useless in two cases",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ShouldPreprocess",
        "title": "Preprocessable",
        "description": "The following expression are made of literals or already known values : they may be fully calculated before running PHP",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/UselessFinal",
        "title": "Useless Final",
        "description": "When a class is declared final, all of its methods are also final by default",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/UselessUnset",
        "title": "Useless Unset",
        "description": "Unsetting variables may not be applicable with a certain type of variables",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/BuriedAssignation",
        "title": "Buried Assignation",
        "description": "Those assignations are buried in the code, and placed in unexpected situations",
        "timetofix": 60
    },
    {
        "patternId": "Performances\/ArrayMergeInLoops",
        "title": "No array_merge() In Loops",
        "description": "array_merge() is memory intensive : every call will duplicate the arguments in memory, before merging them",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UselessParenthesis",
        "title": "Useless Parenthesis",
        "description": "Situations where parenthesis are not necessary, and may be removed",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/UnresolvedInstanceof",
        "title": "Unresolved Instanceof",
        "description": "The instanceof operator doesn't confirm if the compared class exists",
        "timetofix": 5
    },
    {
        "patternId": "Php\/UseObjectApi",
        "title": "Use Object Api",
        "description": "When PHP offers the alternative between procedural and OOP api for the same features, it is recommended to use the OOP API",
        "timetofix": 60
    },
    {
        "patternId": "Exceptions\/Unthrown",
        "title": "Unthrown Exception",
        "description": "These are exceptions that are defined in the code but never thrown",
        "timetofix": 20
    },
    {
        "patternId": "Php\/oldAutoloadUsage",
        "title": "Old Style __autoload()",
        "description": "Avoid __autoload(), only use spl_register_autoload()",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/AlteringForeachWithoutReference",
        "title": "Altering Foreach Without Reference",
        "description": "Foreach() loop that should use a reference",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/toStringPss",
        "title": "Magic Visibility",
        "description": "The class magic methods must have public visibility and cannot be static",
        "timetofix": 20
    },
    {
        "patternId": "Php\/UsePathinfo",
        "title": "Use Pathinfo",
        "description": "Use pathinfo() function instead of string manipulations",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/ShouldUseConstants",
        "title": "Should Use Constants",
        "description": "The following functions have related constants that should be used as arguments, instead of scalar literals, such as integers or strings",
        "timetofix": 20
    },
    {
        "patternId": "Php\/HashAlgos",
        "title": "Hash Algorithms",
        "description": "There is a long but limited list of hashing algorithm available to PHP",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/NoParenthesisForLanguageConstruct",
        "title": "No Parenthesis For Language Construct",
        "description": "Some PHP language constructs, such are include, print, echo don't need parenthesis",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UnusedLabel",
        "title": "Unused Label",
        "description": "Some labels have been defined in the code, but they are not used",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/NoHardcodedPath",
        "title": "No Hardcoded Path",
        "description": "It is not recommended to have literals when accessing files",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/NoHardcodedPort",
        "title": "No Hardcoded Port",
        "description": "When connecting to a remove server, port is an important information",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/UseConstantAsArguments",
        "title": "Use Constant As Arguments",
        "description": "Some methods and functions are defined to be used with constants as arguments",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ImpliedIf",
        "title": "Implied If",
        "description": "It is confusing to emulate if\/then with boolean operators",
        "timetofix": 5
    },
    {
        "patternId": "Variables\/OverwrittenLiterals",
        "title": "Overwritten Literals",
        "description": "The same variable is assigned a literal twice",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/MakeDefault",
        "title": "Assign Default To Properties",
        "description": "Properties may be assigned default values at declaration time",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/NoPublicAccess",
        "title": "No Public Access",
        "description": "The properties below are declared with public access, but are never used publicly",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ShouldChainException",
        "title": "Should Chain Exception",
        "description": "Chain exception to provide more context",
        "timetofix": 5
    },
    {
        "patternId": "Interfaces\/UnusedInterfaces",
        "title": "Unused Interfaces",
        "description": "Some interfaces are defined but not used",
        "timetofix": 5
    },
    {
        "patternId": "Interfaces\/UselessInterfaces",
        "title": "Useless Interfaces",
        "description": "The interfaces below are defined and are implemented by some classes",
        "timetofix": 20
    },
    {
        "patternId": "Interfaces\/UndefinedInterfaces",
        "title": "Undefined Interfaces",
        "description": "Typehint or instanceof that are relying on undefined interfaces (or classes) : they will always return false",
        "timetofix": 20
    },
    {
        "patternId": "Interfaces\/ConcreteVisibility",
        "title": "Concrete Visibility",
        "description": "Methods that implements an interface in a class must be public",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/DoubleInstruction",
        "title": "Double Instructions",
        "description": "Twice the same call in a row",
        "timetofix": 5
    },
    {
        "patternId": "Security\/ShouldUsePreparedStatement",
        "title": "Should Use Prepared Statement",
        "description": "Modern databases provides support for prepared statement : it separates the query from the processed data and highten significantly the security",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/PrintAndDie",
        "title": "Print And Die",
        "description": "Die() also prints",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/UncheckedResources",
        "title": "Unchecked Resources",
        "description": "Resources are created, but never checked before being used",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/NoHardcodedIp",
        "title": "No Hardcoded Ip",
        "description": "Do not leave hard coded IP in your code",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/ElseIfElseif",
        "title": "Else If Versus Elseif",
        "description": "Always use elseif instead of else and if",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UnsetInForeach",
        "title": "Unset In Foreach",
        "description": "Unset applied to the variables of a foreach loop are useless, as they are copies and not the actual value",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/CouldBeClassConstant",
        "title": "Could Be Class Constant",
        "description": "When a property is defined and read, but never modified, it may be a constant",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/CouldBeStatic",
        "title": "Could Be Static",
        "description": "This global is only used in one function or method",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/MultipleDeclarations",
        "title": "Multiple Class Declarations",
        "description": "It is possible to declare several times the same class in the code",
        "timetofix": 20
    },
    {
        "patternId": "Namespaces\/EmptyNamespace",
        "title": "Empty Namespace",
        "description": "Declaring a namespace in the code and not using it for structure declarations or global instructions is useless",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/CouldUseShortAssignation",
        "title": "Could Use Short Assignation",
        "description": "Use short assignement operator, to speed up code, and keep syntax clear",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/UselessAbstract",
        "title": "Useless Abstract Class",
        "description": "Those classes are marked 'abstract' and they are never extended",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/StaticLoop",
        "title": "Static Loop",
        "description": "Static loop may be preprocessed",
        "timetofix": 60
    },
    {
        "patternId": "Performances\/PrePostIncrement",
        "title": "Pre-increment",
        "description": "When possible, use the pre-increment operator (++$i or --$i) instead of the post-increment operator ($i++ or $i--)",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/OnlyVariableReturnedByReference",
        "title": "Only Variable Returned By Reference",
        "description": "Function can't return literals by reference",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/IndicesAreIntOrString",
        "title": "Indices Are Int Or String",
        "description": "Indices in an array notation such as $array['indice'] may only be integers or string",
        "timetofix": 20
    },
    {
        "patternId": "Type\/ShouldTypecast",
        "title": "Should Typecast",
        "description": "When typecasting, it is better to use the casting operator, such as (int) or (bool)",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/NoSelfReferencingConstant",
        "title": "No Self Referencing Constant",
        "description": "It is not possible to use 'self' when defining a constant in a class",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/NoDirectUsage",
        "title": "No Direct Usage",
        "description": "The results of the following functions shouldn't be used directly, but checked first",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/BreakOutsideLoop",
        "title": "Break Outside Loop",
        "description": "Starting with PHP 7, break or continue that are outside a loop (for, foreach(), do",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/NoSubstrOne",
        "title": "No Substr() One",
        "description": "Use array notation $string[$position] to reach a single byte in a string",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/DoubleAssignation",
        "title": "Double Assignation",
        "description": "This happens when a container (variable, property, array index) is assigned with values twice in a row",
        "timetofix": 20
    },
    {
        "patternId": "Php\/EmptyList",
        "title": "Empty List",
        "description": "Empty list() are not allowed anymore in PHP 7",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UselessBrackets",
        "title": "Useless Brackets",
        "description": "Standalone brackets have no use",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/pregOptionE",
        "title": "preg_replace With Option e",
        "description": "preg_replace() supported the \/e option until PHP 7",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/EvalWithoutTry",
        "title": "eval() Without Try",
        "description": "eval() emits a ParseError exception with PHP 7 and later",
        "timetofix": 20
    },
    {
        "patternId": "Extensions\/Extfann",
        "title": "ext\/fann",
        "description": "Extension fann",
        "timetofix": 60
    },
    {
        "patternId": "Functions\/RelayFunction",
        "title": "Relay Function",
        "description": "Relay function only hand workload to another one",
        "timetofix": 20
    },
    {
        "patternId": "Functions\/funcGetArgModified",
        "title": "func_get_arg() Modified",
        "description": "func_get_arg() and func_get_args() used to report the calling value of the argument until PHP 7",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UseInstanceof",
        "title": "Avoid get_class()",
        "description": "get_class() should be replaced with the instanceof operator to check the class of an object",
        "timetofix": 20
    },
    {
        "patternId": "Type\/SilentlyCastInteger",
        "title": "Silently Cast Integer",
        "description": "Those are integer literals that are cast to a float when running PHP",
        "timetofix": 20
    },
    {
        "patternId": "Traits\/UnusedTrait",
        "title": "Unused Traits",
        "description": "Those traits are not used in a class or another trait",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/TimestampDifference",
        "title": "Timestamp Difference",
        "description": "time() and microtime() shouldn't be used to calculate duration or with durations",
        "timetofix": 60
    },
    {
        "patternId": "Functions\/UnusedArguments",
        "title": "Unused Arguments",
        "description": "Those arguments are not used in the method or function",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/SwitchToSwitch",
        "title": "Switch To Switch",
        "description": "The following structures are based on if \/ elseif \/ else",
        "timetofix": 20
    },
    {
        "patternId": "Php\/InternalParameterType",
        "title": "Wrong Parameter Type",
        "description": "The expected parameter is not of the correct type",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/CouldBePrivate",
        "title": "Property Could Be Private Property",
        "description": "The following properties are never used outside their class of definition  Given the analyzed code, they could be set as private",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/RedefinedConstants",
        "title": "Redefined Class Constants",
        "description": "Redefined class constants",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/RedefinedDefault",
        "title": "Redefined Default",
        "description": "Classes allows properties to be set with a default value",
        "timetofix": 60
    },
    {
        "patternId": "Php\/FopenMode",
        "title": "Wrong fopen() Mode",
        "description": "Wrong file opening for fopen()",
        "timetofix": 20
    },
    {
        "patternId": "Php\/DirectiveName",
        "title": "Unknown Directive Name",
        "description": "Unknown directives names used in the code",
        "timetofix": 20
    },
    {
        "patternId": "Variables\/CloseNaming",
        "title": "Confusing Names",
        "description": "The following variables's name are very close and may lead to confusion",
        "timetofix": 60
    },
    {
        "patternId": "Php\/PregMatchAllFlag",
        "title": "preg_match_all() Flag",
        "description": "preg_match_all() has an option to configure the structure of the results : it is either by capturing parenthesis (by default), or by result sets",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/NegativePow",
        "title": "Negative Power",
        "description": "The power operator ** has higher precedence than the sign operators + and -",
        "timetofix": 5
    },
    {
        "patternId": "Interfaces\/AlreadyParentsInterface",
        "title": "Already Parents Interface",
        "description": "The same interface is implemented by a class and one of its children",
        "timetofix": 5
    },
    {
        "patternId": "Php\/BetterRand",
        "title": "Use random_int()",
        "description": "rand() and mt_rand() should be replaced with random_int()",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/CantExtendFinal",
        "title": "Can't Extend Final",
        "description": "It is not possible to extend final classes",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/TernaryInConcat",
        "title": "Ternary In Concat",
        "description": "Ternary operator has higher priority than dot '",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/UsingThisOutsideAClass",
        "title": "Using $this Outside A Class",
        "description": "`$this` is a special variable, that should only be used in a class context",
        "timetofix": 5
    },
    {
        "patternId": "Traits\/UndefinedTrait",
        "title": "Undefined Trait",
        "description": "Those traits are undefined",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/NoHardcodedHash",
        "title": "No Hardcoded Hash",
        "description": "Hash should never be hardcoded",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/IdenticalConditions",
        "title": "Identical Conditions",
        "description": "These logical expressions contain members that are identical",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UnknownPregOption",
        "title": "Unkown Regex Options",
        "description": "PHP's regex support the following list of options : eimsuxADJSUX",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/NoChoice",
        "title": "No Choice",
        "description": "A conditional structure is being used, but both alternatives are the same, leading to the illusion of choice",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/CommonAlternatives",
        "title": "Common Alternatives",
        "description": "In the following conditional structures, expressions were found that are common to both 'then' and 'else'",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/LogicalMistakes",
        "title": "Logical Mistakes",
        "description": "Avoid logical mistakes within long expressions",
        "timetofix": 20
    },
    {
        "patternId": "Exceptions\/UncaughtExceptions",
        "title": "Uncaught Exceptions",
        "description": "The following exceptions are thrown in the code, but are never caught",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/SameConditions",
        "title": "Same Conditions In Condition",
        "description": "At least two consecutive if\/then structures use identical conditions",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ReturnTrueFalse",
        "title": "Return True False",
        "description": "These conditional expressions return true\/false, depending on the condition",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UselessSwitch",
        "title": "Useless Switch",
        "description": "This switch has only one case",
        "timetofix": 5
    },
    {
        "patternId": "Variables\/Overwriting",
        "title": "Overwriting Variable",
        "description": "Replacing the content of a variable by something different is prone to errors",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/CouldUseDir",
        "title": "Could Use __DIR__",
        "description": "Use __DIR__ constant to access the current file's parent directory",
        "timetofix": 20
    },
    {
        "patternId": "Php\/ShouldUseCoalesce",
        "title": "Should Use Coalesce",
        "description": "PHP 7 introduced the ?? operator, that replaces longer structures to set default values when a variable is not set",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/MakeGlobalAProperty",
        "title": "Make Global A Property",
        "description": "Calling global (or $GLOBALS) in methods is slower and less testable than setting the global to a property, and using this property",
        "timetofix": 60
    },
    {
        "patternId": "Structures\/IfWithSameConditions",
        "title": "If With Same Conditions",
        "description": "Successive If \/ then structures that have the same condition may be either merged or have one of the condition changed",
        "timetofix": 20
    },
    {
        "patternId": "Exceptions\/ThrowFunctioncall",
        "title": "Throw Functioncall",
        "description": "The throw keyword is excepted to use an exception",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/UseInstanceof",
        "title": "Use Instanceof",
        "description": "The instanceof operator is a faster alternative to is_object()",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ResultMayBeMissing",
        "title": "Results May Be Missing",
        "description": "preg_match() may return empty values, if the search fails",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/NeverNegative",
        "title": "Always Positive Comparison",
        "description": "Some PHP native functions, such as count(), strlen(), or abs() only returns positive or null values",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/EmptyBlocks",
        "title": "Empty Blocks",
        "description": "Full empty block, part of a control structures",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/ThrowInDestruct",
        "title": "Throw In Destruct",
        "description": "According to the manual, 'Attempting to throw an exception from a destructor (called in the time of script termination) causes a fatal error",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UseSystemTmp",
        "title": "Use System Tmp",
        "description": "It is recommended to avoid hardcoding the temporary file",
        "timetofix": 60
    },
    {
        "patternId": "Traits\/DependantTrait",
        "title": "Dependant Trait",
        "description": "Traits should be autonomous",
        "timetofix": 60
    },
    {
        "patternId": "Namespaces\/HiddenUse",
        "title": "Hidden Use Expression",
        "description": "The use expression for namespaces should always be at te beginning of the namespace block",
        "timetofix": 5
    },
    {
        "patternId": "Namespaces\/CouldUseAlias",
        "title": "Could Use Alias",
        "description": "This long name may be reduced by using an available alias",
        "timetofix": 20
    },
    {
        "patternId": "Namespaces\/ShouldMakeAlias",
        "title": "Should Make Alias",
        "description": "Long names should be aliased",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/MultipleTraitOrInterface",
        "title": "Multiple Identical Trait Or Interface",
        "description": "There is no need to use the same trait, or implements the same interface  more than once",
        "timetofix": 5
    },
    {
        "patternId": "Namespaces\/MultipleAliasDefinitions",
        "title": "Multiple Alias Definitions",
        "description": "Some aliases are representing differents classes across the repository",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/NestedIfthen",
        "title": "Nested Ifthen",
        "description": "Three levels of ifthen is too much",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/CastToBoolean",
        "title": "Cast To Boolean",
        "description": "This expression may be reduced by casting to boolean type",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/FailingSubstrComparison",
        "title": "Failed Substr Comparison",
        "description": "The extracted string must be of the size of the compared string",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/ShouldMakeTernary",
        "title": "Should Make Ternary",
        "description": "Ternary operators are the best when assigning values to a variable",
        "timetofix": 5
    },
    {
        "patternId": "Functions\/UnusedReturnedValue",
        "title": "Unused Returned Value",
        "description": "The function called returns a value, which is ignored",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/ModernEmpty",
        "title": "Modernize Empty With Expression",
        "description": "empty() accept expressions since PHP 5",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/UsePositiveCondition",
        "title": "Use Positive Condition",
        "description": "Whenever possible, use a positive condition",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/DropElseAfterReturn",
        "title": "Drop Else After Return",
        "description": "Avoid else clause when the then clause returns, but not the else",
        "timetofix": 20
    },
    {
        "patternId": "Classes\/UseClassOperator",
        "title": "Use Class Operator",
        "description": "Use ::class to hardcode class names, instead of strings",
        "timetofix": 5
    },
    {
        "patternId": "Security\/DontEchoError",
        "title": "Dont Echo Error",
        "description": "It is recommended to avoid displaying error messages directly to the browser",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/UselessCasting",
        "title": "Useless Casting",
        "description": "There is no need to overcast returned values",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/NoIssetWithEmpty",
        "title": "No Isset With Empty",
        "description": "Empty() actually does the job of Isset() too",
        "timetofix": 5
    },
    {
        "patternId": "Structures\/UselessCheck",
        "title": "Useless Check",
        "description": "Situation where the condition is useless",
        "timetofix": 5
    },
    {
        "patternId": "Classes\/UnitializedProperties",
        "title": "Unitialized Properties",
        "description": "Properties that are not initialized in the constructor, nor at definition",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/BailOutEarly",
        "title": "Bail Out Early",
        "description": "When using conditions, it is recommended to quit in the current context, and avoid else clause altogether",
        "timetofix": 20
    },
    {
        "patternId": "Structures\/DontChangeBlindKey",
        "title": "Dont Change The Blind Var",
        "description": "When using a foreach(), the blind variables hold a copy of the original value",
        "timetofix": 20
    },
    {
        "patternId": "Php\/UseStdclass",
        "title": "Avoid Using stdClass",
        "description": "stdClass is the default class for PHP",
        "timetofix": 60
    },
    {
        "patternId": "Functions\/TooManyLocalVariables",
        "title": "Too Many Local Variables",
        "description": "Too many local variables were found in the methods",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/WrongName",
        "title": "Illegal Name For Method",
        "description": "PHP has reserved usage of methods starting with __ for magic methods",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/FinalByOcramius",
        "title": "Class Should Be Final By Ocramius",
        "description": "'Make your classes always final, if they implement an interface, and no other public methods are defined'",
        "timetofix": 60
    },
    {
        "patternId": "Classes\/CouldBeProtectedProperty",
        "title": "Could Be Protected Property",
        "description": "Those properties are declared public, but are never used publicly",
        "timetofix": 60
    },
    {
        "patternId": "Variables\/AssignedTwiceOrMore",
        "title": "Assigned Twice",
        "description": "The same variable is assigned twice in the same function",
        "timetofix": 20
    }
]